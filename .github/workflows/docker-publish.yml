name: Docker Image CI/CD

on:
  workflow_call:
    secrets:
      aws_access_key_id:
        required: true
        description: 'AWS Access Key ID'
      aws_secret_access_key:
        required: true
        description: 'AWS Secret Access Key'
      aws_session_token:
        required: true
        description: 'AWS Session Token (required for AWS Academy)'
    inputs:
      aws_region:
        required: true
        type: string
        description: 'AWS Region for deployment'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      REPO_NAME: hackathon-fiapx-video-processor

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Short commit hash
        run: echo "TC_IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-session-token: ${{ secrets.aws_session_token }}
          aws-region: ${{ inputs.aws_region }}

      - name: Get AWS Account ID
        id: get-account
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV

      - name: Ensure ECR Repository exists
        run: |
          aws ecr describe-repositories --repository-names "$REPO_NAME" || \
          aws ecr create-repository --repository-name "$REPO_NAME"

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ inputs.aws_region }} | \
          docker login --username AWS \
            --password-stdin $ACCOUNT_ID.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com

      - name: Build Docker image
        run: |
          docker build --no-cache -t $ACCOUNT_ID.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/$REPO_NAME:${{ env.TC_IMAGE_TAG }} \
            -f devops/docker/Dockerfile .

      - name: Push Docker image with tag
        run: |
          docker push $ACCOUNT_ID.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/$REPO_NAME:${{ env.TC_IMAGE_TAG }}

      - name: Tag and push latest
        run: |
          docker tag $ACCOUNT_ID.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/$REPO_NAME:${{ env.TC_IMAGE_TAG }} \
                     $ACCOUNT_ID.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/$REPO_NAME:latest
          docker push $ACCOUNT_ID.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/$REPO_NAME:latest
